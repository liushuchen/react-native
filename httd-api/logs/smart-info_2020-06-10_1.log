2020-06-10 22:44:36 [ INFO ] [ com.smarthome.AdminApplication ] Starting AdminApplication on lscdeMacBook-Pro.local with PID 914 (/Volumes/LSC/smarthome-admin/target/classes started by lsc in /Volumes/LSC/smarthome-admin)
2020-06-10 22:44:36 [ INFO ] [ com.smarthome.AdminApplication ] The following profiles are active: localhost
2020-06-10 22:44:36 [ INFO ] [ org.springframework.data.repository.config.RepositoryConfigurationDelegate ] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-10 22:44:36 [ INFO ] [ org.springframework.data.repository.config.RepositoryConfigurationDelegate ] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-10 22:44:36 [ INFO ] [ org.springframework.data.repository.config.RepositoryConfigurationDelegate ] Finished Spring Data repository scanning in 22ms. Found 0 Redis repository interfaces.
2020-06-10 22:44:37 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-10 22:44:37 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-10 22:44:37 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-10 22:44:37 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-10 22:44:37 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-10 22:44:37 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-10 22:44:37 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-10 22:44:37 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-10 22:44:37 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-10 22:44:37 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'transactionManagerConfig' of type [com.smarthome.aop.TransactionManagerConfig$$EnhancerBySpringCGLIB$$c09ca201] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-10 22:44:37 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'txAdvice' of type [org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-10 22:44:37 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'txAdviceAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-10 22:44:37 [ INFO ] [ org.springframework.boot.web.embedded.tomcat.TomcatWebServer ] Tomcat initialized with port(s): 7706 (http)
2020-06-10 22:44:37 [ INFO ] [ org.apache.coyote.http11.Http11NioProtocol ] Initializing ProtocolHandler ["http-nio-7706"]
2020-06-10 22:44:37 [ INFO ] [ org.apache.catalina.core.StandardService ] Starting service [Tomcat]
2020-06-10 22:44:37 [ INFO ] [ org.apache.catalina.core.StandardEngine ] Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-10 22:44:37 [ INFO ] [ org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] ] Initializing Spring embedded WebApplicationContext
2020-06-10 22:44:37 [ INFO ] [ org.springframework.web.context.ContextLoader ] Root WebApplicationContext: initialization completed in 1461 ms
2020-06-10 22:44:38 [ WARN ] [ com.baomidou.mybatisplus.core.metadata.TableInfoHelper ] Warn: Could not find @TableId in Class: com.smarthome.mapper.po.DeviceControlLog.
2020-06-10 22:44:38 [ WARN ] [ com.baomidou.mybatisplus.core.metadata.TableInfoHelper ] Warn: Could not find @TableId in Class: com.smarthome.mapper.po.Device.
2020-06-10 22:44:38 [ WARN ] [ com.baomidou.mybatisplus.core.metadata.TableInfoHelper ] Warn: Could not find @TableId in Class: com.smarthome.mapper.po.Gateway.
2020-06-10 22:44:39 [ INFO ] [ org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler ] Initializing ExecutorService 'taskScheduler'
2020-06-10 22:44:39 [ INFO ] [ org.apache.coyote.http11.Http11NioProtocol ] Starting ProtocolHandler ["http-nio-7706"]
2020-06-10 22:44:39 [ INFO ] [ org.springframework.boot.web.embedded.tomcat.TomcatWebServer ] Tomcat started on port(s): 7706 (http) with context path ''
2020-06-10 22:44:39 [ INFO ] [ com.smarthome.AdminApplication ] Started AdminApplication in 3.945 seconds (JVM running for 5.096)
2020-06-10 22:44:39 [ INFO ] [ com.smarthome.lifecycle.ApplicationRunnerImpl ] 项目启动后首次执行
2020-06-10 22:44:39 [ INFO ] [ com.smarthome.AdminApplication ] 项目启动成功
2020-06-10 22:45:14 [ INFO ] [ org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] ] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-10 22:45:14 [ INFO ] [ org.springframework.web.servlet.DispatcherServlet ] Initializing Servlet 'dispatcherServlet'
2020-06-10 22:45:14 [ INFO ] [ org.springframework.web.servlet.DispatcherServlet ] Completed initialization in 13 ms
2020-06-10 22:45:14 [ INFO ] [ com.zaxxer.hikari.HikariDataSource ] Retail_HikariCP - Starting...
2020-06-10 22:45:14 [ INFO ] [ com.zaxxer.hikari.HikariDataSource ] Retail_HikariCP - Start completed.
2020-06-10 22:45:14 [ INFO ] [ com.smarthome.aop.TimeInterceptor ] 方法findUserList,请求耗时[591]毫秒
2020-06-10 22:45:14 [ INFO ] [ com.smarthome.aop.EncodeResponseBodyAdvice ] .....加密返回参数开始.....
2020-06-10 22:45:14 [ INFO ] [ com.smarthome.aop.EncodeResponseBodyAdvice ] .....加密返回参数结束.....
2020-06-10 22:45:14 [ INFO ] [ com.smarthome.aop.EncodeResponseBodyAdvice ] 方法[findUserList]返回加密数据:
{"code":"0","data":[{"userId":"460049805532598272","registerAddress":"北京市北京市大兴区","loginTime":1591780068000,"userState":0,"createTime":1589879687000,"loginIp":"127.0.0.1","userType":0,"account":"15632338960"},{"userId":"462209958314905600","registerAddress":"北京市北京市大兴区","userState":0,"createTime":1590365907000,"userType":0,"account":"13051536595"}],"message":"SUCCESS","page":{"indexNo":0,"totalNo":2,"pageSize":20,"pageNo":1,"success":false}}
2020-06-10 22:45:30 [ INFO ] [ com.smarthome.aop.TimeInterceptor ] 方法findUserInfoById,请求耗时[176]毫秒
2020-06-10 22:45:30 [ INFO ] [ com.smarthome.aop.EncodeResponseBodyAdvice ] .....加密返回参数开始.....
2020-06-10 22:45:30 [ INFO ] [ com.smarthome.aop.EncodeResponseBodyAdvice ] .....加密返回参数结束.....
2020-06-10 22:45:30 [ INFO ] [ com.smarthome.aop.EncodeResponseBodyAdvice ] 方法[findUserInfoById]返回加密数据:
{"code":"0","data":{"gatewayList":[{"uniqueCode16":"F00003ED","gatewayType":0,"gatewayId":"460050363190480896","productList":[{"type":"02","name":"两路调光","value":2},{"type":"023","name":"F路影视控制","value":1}]},{"uniqueCode16":"F00003FF","gatewayType":0,"gatewayId":"460050446401277952","productList":[{"type":"01","name":"四路通断","value":1},{"type":"013","name":"安防控制","value":1},{"type":"014","name":"F路调光","value":1},{"type":"015","name":"A0电机控制","value":1},{"type":"016","name":"三合一八键环境面板","value":1},{"type":"017","name":"A地暖控制","value":1},{"type":"018","name":"A新风控制","value":1},{"type":"019","name":"环境探测器","value":1},{"type":"02","name":"两路调光","value":1},{"type":"020","name":"F键面板","value":2},{"type":"021","name":"F路通断","value":1},{"type":"022","name":"A定时控制","value":1},{"type":"023","name":"F路影视控制","value":1},{"type":"024","name":"A音乐控制","value":4},{"type":"025","name":"F双色控制","value":2},{"type":"026","name":"F三色控制","value":1},{"type":"03","name":"四键面板","value":6},{"type":"05","name":"感应器","value":1},{"type":"06","name":"杜亚开合窗帘","value":2},{"type":"07","name":"豪力士指纹门锁","value":1},{"type":"08","name":"modbus协议空调","value":3},{"type":"09","name":"八键面板","value":1}]},{"uniqueCode16":"F00003EE","gatewayType":0,"gatewayId":"460050493507506176","productList":[{"type":"01","name":"四路通断","value":1},{"type":"016","name":"三合一八键环境面板","value":1},{"type":"09","name":"八键面板","value":1}]},{"uniqueCode16":"A1992514","gatewayType":1,"gatewayId":"460068179666931712","productList":[{"type":"027","name":"W1智能插座","value":1}]},{"uniqueCode16":"E00003E9","gatewayType":1,"gatewayId":"463711717180968960","productList":[{"type":"027","name":"W1智能插座","value":1}]},{"uniqueCode16":"F00003F1","gatewayType":0,"gatewayId":"460136547270922240","productList":[]},{"uniqueCode16":"F00003F7","gatewayType":0,"gatewayId":"467662986283192320","productList":[]}],"userId":"460049805532598272","controlType":0},"message":"SUCCESS"}
2020-06-10 22:56:41 [ WARN ] [ com.zaxxer.hikari.pool.HikariPool ] Retail_HikariCP - Retrograde clock change detected (housekeeper delta=26s840ms), soft-evicting connections from pool.
2020-06-10 23:44:52 [ INFO ] [ org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler ] Shutting down ExecutorService 'taskScheduler'
2020-06-10 23:44:52 [ INFO ] [ com.zaxxer.hikari.HikariDataSource ] Retail_HikariCP - Shutdown initiated...
2020-06-10 23:44:52 [ INFO ] [ com.zaxxer.hikari.HikariDataSource ] Retail_HikariCP - Shutdown completed.
2020-06-10 23:44:58 [ INFO ] [ com.smarthome.AdminApplication ] Starting AdminApplication on lscdeMacBook-Pro.local with PID 1407 (/Volumes/LSC/smarthome-admin/target/classes started by lsc in /Volumes/LSC/smarthome-admin)
2020-06-10 23:44:58 [ INFO ] [ com.smarthome.AdminApplication ] The following profiles are active: localhost
2020-06-10 23:44:58 [ INFO ] [ org.springframework.data.repository.config.RepositoryConfigurationDelegate ] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-06-10 23:44:58 [ INFO ] [ org.springframework.data.repository.config.RepositoryConfigurationDelegate ] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-06-10 23:44:58 [ INFO ] [ org.springframework.data.repository.config.RepositoryConfigurationDelegate ] Finished Spring Data repository scanning in 31ms. Found 0 Redis repository interfaces.
2020-06-10 23:44:59 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-10 23:44:59 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-10 23:44:59 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-10 23:44:59 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-10 23:44:59 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-10 23:44:59 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-10 23:44:59 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-10 23:44:59 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-10 23:44:59 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-10 23:44:59 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'transactionManagerConfig' of type [com.smarthome.aop.TransactionManagerConfig$$EnhancerBySpringCGLIB$$2d31baad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-10 23:44:59 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'txAdvice' of type [org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-10 23:44:59 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'txAdviceAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-06-10 23:45:00 [ INFO ] [ org.springframework.boot.web.embedded.tomcat.TomcatWebServer ] Tomcat initialized with port(s): 7706 (http)
2020-06-10 23:45:00 [ INFO ] [ org.apache.coyote.http11.Http11NioProtocol ] Initializing ProtocolHandler ["http-nio-7706"]
2020-06-10 23:45:00 [ INFO ] [ org.apache.catalina.core.StandardService ] Starting service [Tomcat]
2020-06-10 23:45:00 [ INFO ] [ org.apache.catalina.core.StandardEngine ] Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-06-10 23:45:00 [ INFO ] [ org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] ] Initializing Spring embedded WebApplicationContext
2020-06-10 23:45:00 [ INFO ] [ org.springframework.web.context.ContextLoader ] Root WebApplicationContext: initialization completed in 1825 ms
2020-06-10 23:45:00 [ WARN ] [ com.baomidou.mybatisplus.core.metadata.TableInfoHelper ] Warn: Could not find @TableId in Class: com.smarthome.mapper.po.DeviceControlLog.
2020-06-10 23:45:00 [ WARN ] [ com.baomidou.mybatisplus.core.metadata.TableInfoHelper ] Warn: Could not find @TableId in Class: com.smarthome.mapper.po.Device.
2020-06-10 23:45:00 [ WARN ] [ com.baomidou.mybatisplus.core.metadata.TableInfoHelper ] Warn: Could not find @TableId in Class: com.smarthome.mapper.po.Gateway.
2020-06-10 23:45:01 [ INFO ] [ org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler ] Initializing ExecutorService 'taskScheduler'
2020-06-10 23:45:01 [ INFO ] [ org.apache.coyote.http11.Http11NioProtocol ] Starting ProtocolHandler ["http-nio-7706"]
2020-06-10 23:45:01 [ INFO ] [ org.springframework.boot.web.embedded.tomcat.TomcatWebServer ] Tomcat started on port(s): 7706 (http) with context path ''
2020-06-10 23:45:01 [ INFO ] [ com.smarthome.AdminApplication ] Started AdminApplication in 3.677 seconds (JVM running for 4.884)
2020-06-10 23:45:01 [ INFO ] [ com.smarthome.lifecycle.ApplicationRunnerImpl ] 项目启动后首次执行
2020-06-10 23:45:01 [ INFO ] [ com.smarthome.AdminApplication ] 项目启动成功
2020-06-10 23:45:05 [ INFO ] [ org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] ] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-06-10 23:45:05 [ INFO ] [ org.springframework.web.servlet.DispatcherServlet ] Initializing Servlet 'dispatcherServlet'
2020-06-10 23:45:05 [ INFO ] [ org.springframework.web.servlet.DispatcherServlet ] Completed initialization in 10 ms
2020-06-10 23:45:05 [ INFO ] [ com.zaxxer.hikari.HikariDataSource ] Retail_HikariCP - Starting...
2020-06-10 23:45:06 [ INFO ] [ com.zaxxer.hikari.HikariDataSource ] Retail_HikariCP - Start completed.
2020-06-10 23:45:06 [ INFO ] [ com.smarthome.aop.TimeInterceptor ] 方法findUserInfoById,请求耗时[635]毫秒
2020-06-10 23:45:06 [ INFO ] [ com.smarthome.aop.EncodeResponseBodyAdvice ] .....加密返回参数开始.....
2020-06-10 23:45:06 [ INFO ] [ com.smarthome.aop.EncodeResponseBodyAdvice ] .....加密返回参数结束.....
2020-06-10 23:45:06 [ INFO ] [ com.smarthome.aop.EncodeResponseBodyAdvice ] 方法[findUserInfoById]返回加密数据:
{"code":"0","data":{"gatewayList":[{"uniqueCode16":"F00003ED","gatewayType":0,"gatewayId":"460050363190480896","productList":[{"type":"02","name":"两路调光","value":2},{"type":"023","name":"F路影视控制","value":1}]},{"uniqueCode16":"F00003FF","gatewayType":0,"gatewayId":"460050446401277952","productList":[{"type":"01","name":"四路通断","value":1},{"type":"013","name":"安防控制","value":1},{"type":"014","name":"F路调光","value":1},{"type":"015","name":"A0电机控制","value":1},{"type":"016","name":"三合一八键环境面板","value":1},{"type":"017","name":"A地暖控制","value":1},{"type":"018","name":"A新风控制","value":1},{"type":"019","name":"环境探测器","value":1},{"type":"02","name":"两路调光","value":1},{"type":"020","name":"F键面板","value":2},{"type":"021","name":"F路通断","value":1},{"type":"022","name":"A定时控制","value":1},{"type":"023","name":"F路影视控制","value":1},{"type":"024","name":"A音乐控制","value":4},{"type":"025","name":"F双色控制","value":2},{"type":"026","name":"F三色控制","value":1},{"type":"03","name":"四键面板","value":6},{"type":"05","name":"感应器","value":1},{"type":"06","name":"杜亚开合窗帘","value":2},{"type":"07","name":"豪力士指纹门锁","value":1},{"type":"08","name":"modbus协议空调","value":3},{"type":"09","name":"八键面板","value":1}]},{"uniqueCode16":"F00003EE","gatewayType":0,"gatewayId":"460050493507506176","productList":[{"type":"01","name":"四路通断","value":1},{"type":"016","name":"三合一八键环境面板","value":1},{"type":"09","name":"八键面板","value":1}]},{"uniqueCode16":"A1992514","gatewayType":1,"gatewayId":"460068179666931712","productList":[{"type":"027","name":"W1智能插座","value":1}]},{"uniqueCode16":"E00003E9","gatewayType":1,"gatewayId":"463711717180968960","productList":[{"type":"027","name":"W1智能插座","value":1}]}],"userId":"460049805532598272","controlType":0},"message":"SUCCESS"}
2020-06-10 23:47:00 [ INFO ] [ com.smarthome.aop.TimeInterceptor ] 方法findUserInfoById,请求耗时[6223]毫秒
2020-06-10 23:47:00 [ INFO ] [ com.smarthome.aop.EncodeResponseBodyAdvice ] .....加密返回参数开始.....
2020-06-10 23:47:00 [ INFO ] [ com.smarthome.aop.EncodeResponseBodyAdvice ] .....加密返回参数结束.....
2020-06-10 23:47:00 [ INFO ] [ com.smarthome.aop.EncodeResponseBodyAdvice ] 方法[findUserInfoById]返回加密数据:
{"code":"0","data":{"gatewayList":[{"uniqueCode16":"F00003ED","gatewayType":0,"gatewayId":"460050363190480896","productList":[{"type":"02","name":"两路调光","value":2},{"type":"023","name":"F路影视控制","value":1}]},{"uniqueCode16":"F00003FF","gatewayType":0,"gatewayId":"460050446401277952","productList":[{"type":"01","name":"四路通断","value":1},{"type":"013","name":"安防控制","value":1},{"type":"014","name":"F路调光","value":1},{"type":"015","name":"A0电机控制","value":1},{"type":"016","name":"三合一八键环境面板","value":1},{"type":"017","name":"A地暖控制","value":1},{"type":"018","name":"A新风控制","value":1},{"type":"019","name":"环境探测器","value":1},{"type":"02","name":"两路调光","value":1},{"type":"020","name":"F键面板","value":2},{"type":"021","name":"F路通断","value":1},{"type":"022","name":"A定时控制","value":1},{"type":"023","name":"F路影视控制","value":1},{"type":"024","name":"A音乐控制","value":4},{"type":"025","name":"F双色控制","value":2},{"type":"026","name":"F三色控制","value":1},{"type":"03","name":"四键面板","value":6},{"type":"05","name":"感应器","value":1},{"type":"06","name":"杜亚开合窗帘","value":2},{"type":"07","name":"豪力士指纹门锁","value":1},{"type":"08","name":"modbus协议空调","value":3},{"type":"09","name":"八键面板","value":1}]},{"uniqueCode16":"F00003EE","gatewayType":0,"gatewayId":"460050493507506176","productList":[{"type":"01","name":"四路通断","value":1},{"type":"016","name":"三合一八键环境面板","value":1},{"type":"09","name":"八键面板","value":1}]},{"uniqueCode16":"A1992514","gatewayType":1,"gatewayId":"460068179666931712","productList":[{"type":"027","name":"W1智能插座","value":1}]},{"uniqueCode16":"E00003E9","gatewayType":1,"gatewayId":"463711717180968960","productList":[{"type":"027","name":"W1智能插座","value":1}]}],"userId":"460049805532598272","controlType":0},"message":"SUCCESS"}
2020-06-10 23:47:35 [ INFO ] [ com.smarthome.aop.TimeInterceptor ] 方法findUserInfoById,请求耗时[25474]毫秒
2020-06-10 23:47:35 [ INFO ] [ com.smarthome.aop.EncodeResponseBodyAdvice ] .....加密返回参数开始.....
2020-06-10 23:47:35 [ INFO ] [ com.smarthome.aop.EncodeResponseBodyAdvice ] .....加密返回参数结束.....
2020-06-10 23:47:35 [ INFO ] [ com.smarthome.aop.EncodeResponseBodyAdvice ] 方法[findUserInfoById]返回加密数据:
{"code":"0","data":{"gatewayList":[{"uniqueCode16":"F00003ED","gatewayType":0,"gatewayId":"460050363190480896","productList":[{"type":"02","name":"两路调光","value":2},{"type":"023","name":"F路影视控制","value":1}]},{"uniqueCode16":"F00003FF","gatewayType":0,"gatewayId":"460050446401277952","productList":[{"type":"01","name":"四路通断","value":1},{"type":"013","name":"安防控制","value":1},{"type":"014","name":"F路调光","value":1},{"type":"015","name":"A0电机控制","value":1},{"type":"016","name":"三合一八键环境面板","value":1},{"type":"017","name":"A地暖控制","value":1},{"type":"018","name":"A新风控制","value":1},{"type":"019","name":"环境探测器","value":1},{"type":"02","name":"两路调光","value":1},{"type":"020","name":"F键面板","value":2},{"type":"021","name":"F路通断","value":1},{"type":"022","name":"A定时控制","value":1},{"type":"023","name":"F路影视控制","value":1},{"type":"024","name":"A音乐控制","value":4},{"type":"025","name":"F双色控制","value":2},{"type":"026","name":"F三色控制","value":1},{"type":"03","name":"四键面板","value":6},{"type":"05","name":"感应器","value":1},{"type":"06","name":"杜亚开合窗帘","value":2},{"type":"07","name":"豪力士指纹门锁","value":1},{"type":"08","name":"modbus协议空调","value":3},{"type":"09","name":"八键面板","value":1}]},{"uniqueCode16":"F00003EE","gatewayType":0,"gatewayId":"460050493507506176","productList":[{"type":"01","name":"四路通断","value":1},{"type":"016","name":"三合一八键环境面板","value":1},{"type":"09","name":"八键面板","value":1}]},{"uniqueCode16":"A1992514","gatewayType":1,"gatewayId":"460068179666931712","productList":[{"type":"027","name":"W1智能插座","value":1}]},{"uniqueCode16":"E00003E9","gatewayType":1,"gatewayId":"463711717180968960","productList":[{"type":"027","name":"W1智能插座","value":1}]}],"userId":"460049805532598272","controlType":0},"message":"SUCCESS"}
2020-06-10 23:47:52 [ INFO ] [ com.smarthome.aop.TimeInterceptor ] 方法findUserInfoById,请求耗时[2910]毫秒
2020-06-10 23:47:52 [ INFO ] [ com.smarthome.aop.EncodeResponseBodyAdvice ] .....加密返回参数开始.....
2020-06-10 23:47:52 [ INFO ] [ com.smarthome.aop.EncodeResponseBodyAdvice ] .....加密返回参数结束.....
2020-06-10 23:47:52 [ INFO ] [ com.smarthome.aop.EncodeResponseBodyAdvice ] 方法[findUserInfoById]返回加密数据:
{"code":"0","data":{"gatewayList":[],"userId":"462209958314905600","controlType":0},"message":"SUCCESS"}
