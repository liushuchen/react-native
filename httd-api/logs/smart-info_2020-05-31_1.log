2020-05-31 20:26:55 [ INFO ] [ com.smarthome.AdminApplication ] Starting AdminApplication on lscdeMacBook-Pro.local with PID 829 (/Volumes/LSC/smarthome-admin/target/classes started by lsc in /Volumes/LSC/smarthome-admin)
2020-05-31 20:26:55 [ INFO ] [ com.smarthome.AdminApplication ] The following profiles are active: localhost
2020-05-31 20:26:55 [ INFO ] [ org.springframework.data.repository.config.RepositoryConfigurationDelegate ] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-31 20:26:55 [ INFO ] [ org.springframework.data.repository.config.RepositoryConfigurationDelegate ] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-05-31 20:26:55 [ INFO ] [ org.springframework.data.repository.config.RepositoryConfigurationDelegate ] Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2020-05-31 20:26:56 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-31 20:26:56 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-31 20:26:56 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-31 20:26:56 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-31 20:26:56 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-31 20:26:56 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-31 20:26:56 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-31 20:26:56 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-31 20:26:56 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-31 20:26:56 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'transactionManagerConfig' of type [com.smarthome.aop.TransactionManagerConfig$$EnhancerBySpringCGLIB$$1cc9fd77] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-31 20:26:56 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'txAdvice' of type [org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-31 20:26:56 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'txAdviceAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-31 20:26:56 [ INFO ] [ org.springframework.boot.web.embedded.tomcat.TomcatWebServer ] Tomcat initialized with port(s): 7706 (http)
2020-05-31 20:26:56 [ INFO ] [ org.apache.coyote.http11.Http11NioProtocol ] Initializing ProtocolHandler ["http-nio-7706"]
2020-05-31 20:26:56 [ INFO ] [ org.apache.catalina.core.StandardService ] Starting service [Tomcat]
2020-05-31 20:26:56 [ INFO ] [ org.apache.catalina.core.StandardEngine ] Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-31 20:26:56 [ INFO ] [ org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] ] Initializing Spring embedded WebApplicationContext
2020-05-31 20:26:56 [ INFO ] [ org.springframework.web.context.ContextLoader ] Root WebApplicationContext: initialization completed in 1578 ms
2020-05-31 20:26:57 [ INFO ] [ org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor ] Initializing ExecutorService 'applicationTaskExecutor'
2020-05-31 20:26:58 [ INFO ] [ org.apache.coyote.http11.Http11NioProtocol ] Starting ProtocolHandler ["http-nio-7706"]
2020-05-31 20:26:58 [ INFO ] [ org.springframework.boot.web.embedded.tomcat.TomcatWebServer ] Tomcat started on port(s): 7706 (http) with context path ''
2020-05-31 20:26:58 [ INFO ] [ com.smarthome.AdminApplication ] Started AdminApplication in 3.434 seconds (JVM running for 5.305)
2020-05-31 20:26:58 [ INFO ] [ com.smarthome.lifecycle.ApplicationRunnerImpl ] 项目启动后首次执行
2020-05-31 20:26:58 [ INFO ] [ com.smarthome.AdminApplication ] 项目启动成功
2020-05-31 20:27:01 [ INFO ] [ org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor ] Shutting down ExecutorService 'applicationTaskExecutor'
2020-05-31 20:39:23 [ INFO ] [ com.smarthome.AdminApplication ] Starting AdminApplication on lscdeMacBook-Pro.local with PID 1234 (/Volumes/LSC/smarthome-admin/target/classes started by lsc in /Volumes/LSC/smarthome-admin)
2020-05-31 20:39:23 [ INFO ] [ com.smarthome.AdminApplication ] The following profiles are active: localhost
2020-05-31 20:39:24 [ INFO ] [ org.springframework.data.repository.config.RepositoryConfigurationDelegate ] Multiple Spring Data modules found, entering strict repository configuration mode!
2020-05-31 20:39:24 [ INFO ] [ org.springframework.data.repository.config.RepositoryConfigurationDelegate ] Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-05-31 20:39:24 [ INFO ] [ org.springframework.data.repository.config.RepositoryConfigurationDelegate ] Finished Spring Data repository scanning in 16ms. Found 0 Redis repository interfaces.
2020-05-31 20:39:24 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$DataSourceTransactionManagerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-31 20:39:24 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-31 20:39:24 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-31 20:39:24 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-31 20:39:24 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-31 20:39:24 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-31 20:39:24 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-31 20:39:24 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-31 20:39:24 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'transactionManager' of type [org.springframework.jdbc.datasource.DataSourceTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-31 20:39:24 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'transactionManagerConfig' of type [com.smarthome.aop.TransactionManagerConfig$$EnhancerBySpringCGLIB$$378b645b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-31 20:39:24 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'txAdvice' of type [org.springframework.transaction.interceptor.TransactionInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-31 20:39:24 [ INFO ] [ org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker ] Bean 'txAdviceAdvisor' of type [org.springframework.aop.support.DefaultPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-05-31 20:39:24 [ INFO ] [ org.springframework.boot.web.embedded.tomcat.TomcatWebServer ] Tomcat initialized with port(s): 7706 (http)
2020-05-31 20:39:24 [ INFO ] [ org.apache.coyote.http11.Http11NioProtocol ] Initializing ProtocolHandler ["http-nio-7706"]
2020-05-31 20:39:24 [ INFO ] [ org.apache.catalina.core.StandardService ] Starting service [Tomcat]
2020-05-31 20:39:24 [ INFO ] [ org.apache.catalina.core.StandardEngine ] Starting Servlet engine: [Apache Tomcat/9.0.35]
2020-05-31 20:39:24 [ INFO ] [ org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] ] Initializing Spring embedded WebApplicationContext
2020-05-31 20:39:24 [ INFO ] [ org.springframework.web.context.ContextLoader ] Root WebApplicationContext: initialization completed in 1378 ms
2020-05-31 20:39:25 [ INFO ] [ org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor ] Initializing ExecutorService 'applicationTaskExecutor'
2020-05-31 20:39:25 [ INFO ] [ org.apache.coyote.http11.Http11NioProtocol ] Starting ProtocolHandler ["http-nio-7706"]
2020-05-31 20:39:26 [ INFO ] [ org.springframework.boot.web.embedded.tomcat.TomcatWebServer ] Tomcat started on port(s): 7706 (http) with context path ''
2020-05-31 20:39:26 [ INFO ] [ com.smarthome.AdminApplication ] Started AdminApplication in 2.871 seconds (JVM running for 3.981)
2020-05-31 20:39:26 [ INFO ] [ com.smarthome.lifecycle.ApplicationRunnerImpl ] 项目启动后首次执行
2020-05-31 20:39:26 [ INFO ] [ com.smarthome.AdminApplication ] 项目启动成功
2020-05-31 20:39:31 [ INFO ] [ org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] ] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-05-31 20:39:31 [ INFO ] [ org.springframework.web.servlet.DispatcherServlet ] Initializing Servlet 'dispatcherServlet'
2020-05-31 20:39:31 [ INFO ] [ org.springframework.web.servlet.DispatcherServlet ] Completed initialization in 9 ms
2020-05-31 20:39:31 [ INFO ] [ com.zaxxer.hikari.HikariDataSource ] Retail_HikariCP - Starting...
2020-05-31 20:39:32 [ INFO ] [ com.zaxxer.hikari.HikariDataSource ] Retail_HikariCP - Start completed.
2020-05-31 20:39:32 [ INFO ] [ com.smarthome.aop.TimeInterceptor ] 方法findAdminUserById,请求耗时[622]毫秒
2020-05-31 20:39:32 [ INFO ] [ com.smarthome.aop.EncodeResponseBodyAdvice ] .....加密返回参数开始.....
2020-05-31 20:39:32 [ INFO ] [ com.smarthome.aop.EncodeResponseBodyAdvice ] .....加密返回参数结束.....
2020-05-31 20:39:32 [ INFO ] [ com.smarthome.aop.EncodeResponseBodyAdvice ] 方法[findAdminUserById]返回加密数据:
{"code":"0","data":{"nickName":"刘曙尘","roleId":1,"phone":"13051536595","adminId":1,"account":"13051536595"},"message":"SUCCESS"}
2020-05-31 20:40:34 [ INFO ] [ com.smarthome.aop.TimeInterceptor ] 方法updateAdminUserById,请求耗时[152]毫秒
2020-05-31 20:40:34 [ INFO ] [ com.smarthome.aop.EncodeResponseBodyAdvice ] .....加密返回参数开始.....
2020-05-31 20:40:34 [ INFO ] [ com.smarthome.aop.EncodeResponseBodyAdvice ] .....加密返回参数结束.....
2020-05-31 20:40:34 [ INFO ] [ com.smarthome.aop.EncodeResponseBodyAdvice ] 方法[updateAdminUserById]返回加密数据:
{"code":"0","message":"SUCCESS"}
2020-05-31 20:41:46 [ INFO ] [ com.smarthome.aop.TimeInterceptor ] 方法findAdminUserById,请求耗时[25]毫秒
2020-05-31 20:41:46 [ INFO ] [ com.smarthome.aop.EncodeResponseBodyAdvice ] .....加密返回参数开始.....
2020-05-31 20:41:46 [ INFO ] [ com.smarthome.aop.EncodeResponseBodyAdvice ] .....加密返回参数结束.....
2020-05-31 20:41:46 [ INFO ] [ com.smarthome.aop.EncodeResponseBodyAdvice ] 方法[findAdminUserById]返回加密数据:
{"code":"0","data":{"nickName":"昵称","roleId":0,"phone":"13051536595","adminId":1,"account":"账号"},"message":"SUCCESS"}
2020-05-31 20:41:50 [ INFO ] [ com.smarthome.aop.TimeInterceptor ] 方法findAdminUserById,请求耗时[28]毫秒
2020-05-31 20:41:50 [ INFO ] [ com.smarthome.aop.EncodeResponseBodyAdvice ] .....加密返回参数开始.....
2020-05-31 20:41:50 [ INFO ] [ com.smarthome.aop.EncodeResponseBodyAdvice ] .....加密返回参数结束.....
2020-05-31 20:41:50 [ INFO ] [ com.smarthome.aop.EncodeResponseBodyAdvice ] 方法[findAdminUserById]返回加密数据:
{"code":"0","data":{"nickName":"昵称","roleId":0,"phone":"13051536595","adminId":1,"account":"账号"},"message":"SUCCESS"}
2020-05-31 20:46:51 [ INFO ] [ org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor ] Shutting down ExecutorService 'applicationTaskExecutor'
2020-05-31 20:46:51 [ INFO ] [ com.zaxxer.hikari.HikariDataSource ] Retail_HikariCP - Shutdown initiated...
2020-05-31 20:46:51 [ INFO ] [ com.zaxxer.hikari.HikariDataSource ] Retail_HikariCP - Shutdown completed.
